-- @file godot_globals.lua  Global Godot functionality and enum values
-- This file is part of Godot Lua PluginScript: https://github.com/gilzoide/godot-lua-pluginscript
--
-- Copyright (C) 2021 Gil Barbosa Reis.
-- 
-- Permission is hereby granted, free of charge, to any person obtaining a copy
-- of this software and associated documentation files (the “Software”), to
-- deal in the Software without restriction, including without limitation the
-- rights to use, copy, modify, merge, publish, distribute, sublicense, and/or
-- sell copies of the Software, and to permit persons to whom the Software is
-- furnished to do so, subject to the following conditions:
-- 
-- The above copyright notice and this permission notice shall be included in
-- all copies or substantial portions of the Software.
-- 
-- THE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
-- IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
-- FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
-- AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
-- LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
-- FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS
-- IN THE SOFTWARE.
local function str(value)
	if ffi.istype(String, value) then
		return value
	else
		return Variant(value):as_string()
	end
end

local function concat_gdvalues(a, b)
	return ffi.gc(api.godot_string_operator_plus(str(a), str(b)), api.godot_string_destroy)
end

GD = {
	api = api,
	api_1_1 = api_1_1,
	api_1_2 = api_1_2,
	-- godot_error
	OK = clib.GODOT_OK, 
	FAILED = clib.GODOT_FAILED, 
	ERR_UNAVAILABLE = clib.GODOT_ERR_UNAVAILABLE, 
	ERR_UNCONFIGURED = clib.GODOT_ERR_UNCONFIGURED, 
	ERR_UNAUTHORIZED = clib.GODOT_ERR_UNAUTHORIZED, 
	ERR_PARAMETER_RANGE_ERROR = clib.GODOT_ERR_PARAMETER_RANGE_ERROR, 
	ERR_OUT_OF_MEMORY = clib.GODOT_ERR_OUT_OF_MEMORY, 
	ERR_FILE_NOT_FOUND = clib.GODOT_ERR_FILE_NOT_FOUND,
	ERR_FILE_BAD_DRIVE = clib.GODOT_ERR_FILE_BAD_DRIVE,
	ERR_FILE_BAD_PATH = clib.GODOT_ERR_FILE_BAD_PATH,
	ERR_FILE_NO_PERMISSION = clib.GODOT_ERR_FILE_NO_PERMISSION, 
	ERR_FILE_ALREADY_IN_USE = clib.GODOT_ERR_FILE_ALREADY_IN_USE,
	ERR_FILE_CANT_OPEN = clib.GODOT_ERR_FILE_CANT_OPEN,
	ERR_FILE_CANT_WRITE = clib.GODOT_ERR_FILE_CANT_WRITE,
	ERR_FILE_CANT_READ = clib.GODOT_ERR_FILE_CANT_READ,
	ERR_FILE_UNRECOGNIZED = clib.GODOT_ERR_FILE_UNRECOGNIZED, 
	ERR_FILE_CORRUPT = clib.GODOT_ERR_FILE_CORRUPT,
	ERR_FILE_MISSING_DEPENDENCIES = clib.GODOT_ERR_FILE_MISSING_DEPENDENCIES,
	ERR_FILE_EOF = clib.GODOT_ERR_FILE_EOF,
	ERR_CANT_OPEN = clib.GODOT_ERR_CANT_OPEN, 
	ERR_CANT_CREATE = clib.GODOT_ERR_CANT_CREATE, 
	ERR_QUERY_FAILED = clib.GODOT_ERR_QUERY_FAILED,
	ERR_ALREADY_IN_USE = clib.GODOT_ERR_ALREADY_IN_USE,
	ERR_LOCKED = clib.GODOT_ERR_LOCKED, 
	ERR_TIMEOUT = clib.GODOT_ERR_TIMEOUT,
	ERR_CANT_CONNECT = clib.GODOT_ERR_CANT_CONNECT, 
	ERR_CANT_RESOLVE = clib.GODOT_ERR_CANT_RESOLVE,
	ERR_CONNECTION_ERROR = clib.GODOT_ERR_CONNECTION_ERROR,
	ERR_CANT_ACQUIRE_RESOURCE = clib.GODOT_ERR_CANT_ACQUIRE_RESOURCE,
	ERR_CANT_FORK = clib.GODOT_ERR_CANT_FORK,
	ERR_INVALID_DATA = clib.GODOT_ERR_INVALID_DATA, 
	ERR_INVALID_PARAMETER = clib.GODOT_ERR_INVALID_PARAMETER, 
	ERR_ALREADY_EXISTS = clib.GODOT_ERR_ALREADY_EXISTS, 
	ERR_DOES_NOT_EXIST = clib.GODOT_ERR_DOES_NOT_EXIST, 
	ERR_DATABASE_CANT_READ = clib.GODOT_ERR_DATABASE_CANT_READ, 
	ERR_DATABASE_CANT_WRITE = clib.GODOT_ERR_DATABASE_CANT_WRITE, 
	ERR_COMPILATION_FAILED = clib.GODOT_ERR_COMPILATION_FAILED,
	ERR_METHOD_NOT_FOUND = clib.GODOT_ERR_METHOD_NOT_FOUND,
	ERR_LINK_FAILED = clib.GODOT_ERR_LINK_FAILED,
	ERR_SCRIPT_FAILED = clib.GODOT_ERR_SCRIPT_FAILED,
	ERR_CYCLIC_LINK = clib.GODOT_ERR_CYCLIC_LINK, 
	ERR_INVALID_DECLARATION = clib.GODOT_ERR_INVALID_DECLARATION,
	ERR_DUPLICATE_SYMBOL = clib.GODOT_ERR_DUPLICATE_SYMBOL,
	ERR_PARSE_ERROR = clib.GODOT_ERR_PARSE_ERROR,
	ERR_BUSY = clib.GODOT_ERR_BUSY,
	ERR_SKIP = clib.GODOT_ERR_SKIP, 
	ERR_HELP = clib.GODOT_ERR_HELP, 
	ERR_BUG = clib.GODOT_ERR_BUG, 
	ERR_PRINTER_ON_FIRE = clib.GODOT_ERR_PRINTER_ON_FIRE, 
	-- godot_variant_type
	TYPE_NIL = clib.GODOT_VARIANT_TYPE_NIL,
	TYPE_BOOL = clib.GODOT_VARIANT_TYPE_BOOL,
	TYPE_INT = clib.GODOT_VARIANT_TYPE_INT,
	TYPE_REAL = clib.GODOT_VARIANT_TYPE_REAL,
	TYPE_STRING = clib.GODOT_VARIANT_TYPE_STRING,
	TYPE_VECTOR2 = clib.GODOT_VARIANT_TYPE_VECTOR2, 
	TYPE_RECT2 = clib.GODOT_VARIANT_TYPE_RECT2,
	TYPE_VECTOR3 = clib.GODOT_VARIANT_TYPE_VECTOR3,
	TYPE_TRANSFORM2D = clib.GODOT_VARIANT_TYPE_TRANSFORM2D,
	TYPE_PLANE = clib.GODOT_VARIANT_TYPE_PLANE,
	TYPE_QUAT = clib.GODOT_VARIANT_TYPE_QUAT, 
	TYPE_AABB = clib.GODOT_VARIANT_TYPE_AABB,
	TYPE_BASIS = clib.GODOT_VARIANT_TYPE_BASIS,
	TYPE_TRANSFORM = clib.GODOT_VARIANT_TYPE_TRANSFORM,
	TYPE_COLOR = clib.GODOT_VARIANT_TYPE_COLOR,
	TYPE_NODE_PATH = clib.GODOT_VARIANT_TYPE_NODE_PATH, 
	TYPE_RID = clib.GODOT_VARIANT_TYPE_RID,
	TYPE_OBJECT = clib.GODOT_VARIANT_TYPE_OBJECT,
	TYPE_DICTIONARY = clib.GODOT_VARIANT_TYPE_DICTIONARY,
	TYPE_ARRAY = clib.GODOT_VARIANT_TYPE_ARRAY, 
	TYPE_POOL_BYTE_ARRAY = clib.GODOT_VARIANT_TYPE_POOL_BYTE_ARRAY,
	TYPE_POOL_INT_ARRAY = clib.GODOT_VARIANT_TYPE_POOL_INT_ARRAY,
	TYPE_POOL_REAL_ARRAY = clib.GODOT_VARIANT_TYPE_POOL_REAL_ARRAY,
	TYPE_POOL_STRING_ARRAY = clib.GODOT_VARIANT_TYPE_POOL_STRING_ARRAY,
	TYPE_POOL_VECTOR2_ARRAY = clib.GODOT_VARIANT_TYPE_POOL_VECTOR2_ARRAY, 
	TYPE_POOL_VECTOR3_ARRAY = clib.GODOT_VARIANT_TYPE_POOL_VECTOR3_ARRAY,
	TYPE_POOL_COLOR_ARRAY = clib.GODOT_VARIANT_TYPE_POOL_COLOR_ARRAY,
	-- godot_variant_call_error_error
	CALL_OK = clib.GODOT_CALL_ERROR_CALL_OK,
	CALL_ERROR_INVALID_METHOD = clib.GODOT_CALL_ERROR_CALL_ERROR_INVALID_METHOD,
	CALL_ERROR_INVALID_ARGUMENT = clib.GODOT_CALL_ERROR_CALL_ERROR_INVALID_ARGUMENT,
	CALL_ERROR_TOO_MANY_ARGUMENTS = clib.GODOT_CALL_ERROR_CALL_ERROR_TOO_MANY_ARGUMENTS,
	CALL_ERROR_TOO_FEW_ARGUMENTS = clib.GODOT_CALL_ERROR_CALL_ERROR_TOO_FEW_ARGUMENTS,
	CALL_ERROR_INSTANCE_IS_NULL = clib.GODOT_CALL_ERROR_CALL_ERROR_INSTANCE_IS_NULL,
	-- godot_method_rpc_mode
	RPC_MODE_DISABLED = clib.GODOT_METHOD_RPC_MODE_DISABLED,
	RPC_MODE_REMOTE = clib.GODOT_METHOD_RPC_MODE_REMOTE,
	RPC_MODE_MASTER = clib.GODOT_METHOD_RPC_MODE_MASTER,
	RPC_MODE_PUPPET = clib.GODOT_METHOD_RPC_MODE_PUPPET,
	RPC_MODE_SLAVE = clib.GODOT_METHOD_RPC_MODE_SLAVE,
	RPC_MODE_REMOTESYNC = clib.GODOT_METHOD_RPC_MODE_REMOTESYNC,
	RPC_MODE_SYNC = clib.GODOT_METHOD_RPC_MODE_SYNC,
	RPC_MODE_MASTERSYNC = clib.GODOT_METHOD_RPC_MODE_MASTERSYNC,
	RPC_MODE_PUPPETSYNC = clib.GODOT_METHOD_RPC_MODE_PUPPETSYNC,
	-- godot_property_hint
	PROPERTY_HINT_NONE = clib.GODOT_PROPERTY_HINT_NONE, 
	PROPERTY_HINT_RANGE = clib.GODOT_PROPERTY_HINT_RANGE, 
	PROPERTY_HINT_EXP_RANGE = clib.GODOT_PROPERTY_HINT_EXP_RANGE, 
	PROPERTY_HINT_ENUM = clib.GODOT_PROPERTY_HINT_ENUM, 
	PROPERTY_HINT_EXP_EASING = clib.GODOT_PROPERTY_HINT_EXP_EASING, 
	PROPERTY_HINT_LENGTH = clib.GODOT_PROPERTY_HINT_LENGTH, 
	PROPERTY_HINT_SPRITE_FRAME = clib.GODOT_PROPERTY_HINT_SPRITE_FRAME, 
	PROPERTY_HINT_KEY_ACCEL = clib.GODOT_PROPERTY_HINT_KEY_ACCEL, 
	PROPERTY_HINT_FLAGS = clib.GODOT_PROPERTY_HINT_FLAGS, 
	PROPERTY_HINT_LAYERS_2D_RENDER = clib.GODOT_PROPERTY_HINT_LAYERS_2D_RENDER,
	PROPERTY_HINT_LAYERS_2D_PHYSICS = clib.GODOT_PROPERTY_HINT_LAYERS_2D_PHYSICS,
	PROPERTY_HINT_LAYERS_3D_RENDER = clib.GODOT_PROPERTY_HINT_LAYERS_3D_RENDER,
	PROPERTY_HINT_LAYERS_3D_PHYSICS = clib.GODOT_PROPERTY_HINT_LAYERS_3D_PHYSICS,
	PROPERTY_HINT_FILE = clib.GODOT_PROPERTY_HINT_FILE, 
	PROPERTY_HINT_DIR = clib.GODOT_PROPERTY_HINT_DIR, 
	PROPERTY_HINT_GLOBAL_FILE = clib.GODOT_PROPERTY_HINT_GLOBAL_FILE, 
	PROPERTY_HINT_GLOBAL_DIR = clib.GODOT_PROPERTY_HINT_GLOBAL_DIR, 
	PROPERTY_HINT_RESOURCE_TYPE = clib.GODOT_PROPERTY_HINT_RESOURCE_TYPE, 
	PROPERTY_HINT_MULTILINE_TEXT = clib.GODOT_PROPERTY_HINT_MULTILINE_TEXT, 
	PROPERTY_HINT_PLACEHOLDER_TEXT = clib.GODOT_PROPERTY_HINT_PLACEHOLDER_TEXT, 
	PROPERTY_HINT_COLOR_NO_ALPHA = clib.GODOT_PROPERTY_HINT_COLOR_NO_ALPHA, 
	PROPERTY_HINT_IMAGE_COMPRESS_LOSSY = clib.GODOT_PROPERTY_HINT_IMAGE_COMPRESS_LOSSY,
	PROPERTY_HINT_IMAGE_COMPRESS_LOSSLESS = clib.GODOT_PROPERTY_HINT_IMAGE_COMPRESS_LOSSLESS,
	PROPERTY_HINT_OBJECT_ID = clib.GODOT_PROPERTY_HINT_OBJECT_ID,
	PROPERTY_HINT_TYPE_STRING = clib.GODOT_PROPERTY_HINT_TYPE_STRING, 
	PROPERTY_HINT_NODE_PATH_TO_EDITED_NODE = clib.GODOT_PROPERTY_HINT_NODE_PATH_TO_EDITED_NODE, 
	PROPERTY_HINT_METHOD_OF_VARIANT_TYPE = clib.GODOT_PROPERTY_HINT_METHOD_OF_VARIANT_TYPE, 
	PROPERTY_HINT_METHOD_OF_BASE_TYPE = clib.GODOT_PROPERTY_HINT_METHOD_OF_BASE_TYPE, 
	PROPERTY_HINT_METHOD_OF_INSTANCE = clib.GODOT_PROPERTY_HINT_METHOD_OF_INSTANCE, 
	PROPERTY_HINT_METHOD_OF_SCRIPT = clib.GODOT_PROPERTY_HINT_METHOD_OF_SCRIPT, 
	PROPERTY_HINT_PROPERTY_OF_VARIANT_TYPE = clib.GODOT_PROPERTY_HINT_PROPERTY_OF_VARIANT_TYPE, 
	PROPERTY_HINT_PROPERTY_OF_BASE_TYPE = clib.GODOT_PROPERTY_HINT_PROPERTY_OF_BASE_TYPE, 
	PROPERTY_HINT_PROPERTY_OF_INSTANCE = clib.GODOT_PROPERTY_HINT_PROPERTY_OF_INSTANCE, 
	PROPERTY_HINT_PROPERTY_OF_SCRIPT = clib.GODOT_PROPERTY_HINT_PROPERTY_OF_SCRIPT, 
	-- godot_property_usage_flags
	PROPERTY_USAGE_STORAGE = clib.GODOT_PROPERTY_USAGE_STORAGE,
	PROPERTY_USAGE_EDITOR = clib.GODOT_PROPERTY_USAGE_EDITOR,
	PROPERTY_USAGE_NETWORK = clib.GODOT_PROPERTY_USAGE_NETWORK,
	PROPERTY_USAGE_EDITOR_HELPER = clib.GODOT_PROPERTY_USAGE_EDITOR_HELPER,
	PROPERTY_USAGE_CHECKABLE = clib.GODOT_PROPERTY_USAGE_CHECKABLE, 
	PROPERTY_USAGE_CHECKED = clib.GODOT_PROPERTY_USAGE_CHECKED, 
	PROPERTY_USAGE_INTERNATIONALIZED = clib.GODOT_PROPERTY_USAGE_INTERNATIONALIZED, 
	PROPERTY_USAGE_GROUP = clib.GODOT_PROPERTY_USAGE_GROUP, 
	PROPERTY_USAGE_CATEGORY = clib.GODOT_PROPERTY_USAGE_CATEGORY,
	PROPERTY_USAGE_STORE_IF_NONZERO = clib.GODOT_PROPERTY_USAGE_STORE_IF_NONZERO, 
	PROPERTY_USAGE_STORE_IF_NONONE = clib.GODOT_PROPERTY_USAGE_STORE_IF_NONONE, 
	PROPERTY_USAGE_NO_INSTANCE_STATE = clib.GODOT_PROPERTY_USAGE_NO_INSTANCE_STATE,
	PROPERTY_USAGE_RESTART_IF_CHANGED = clib.GODOT_PROPERTY_USAGE_RESTART_IF_CHANGED,
	PROPERTY_USAGE_SCRIPT_VARIABLE = clib.GODOT_PROPERTY_USAGE_SCRIPT_VARIABLE,
	PROPERTY_USAGE_STORE_IF_NULL = clib.GODOT_PROPERTY_USAGE_STORE_IF_NULL,
	PROPERTY_USAGE_ANIMATE_AS_TRIGGER = clib.GODOT_PROPERTY_USAGE_ANIMATE_AS_TRIGGER,
	PROPERTY_USAGE_UPDATE_ALL_IF_MODIFIED = clib.GODOT_PROPERTY_USAGE_UPDATE_ALL_IF_MODIFIED,
	PROPERTY_USAGE_DEFAULT = clib.GODOT_PROPERTY_USAGE_DEFAULT,
	PROPERTY_USAGE_DEFAULT_INTL = clib.GODOT_PROPERTY_USAGE_DEFAULT_INTL,
	PROPERTY_USAGE_NOEDITOR = clib.GODOT_PROPERTY_USAGE_NOEDITOR,
}

bool = ffi.typeof('godot_bool')
int = ffi.typeof('godot_int')
float = ffi.typeof('godot_real')

if api_1_1 then
	GD.is_instance_valid = api_1_1.godot_is_instance_valid
end

GD.str = str

function GD.tostring(value)
	return tostring(Variant(value))
end

local function join_str(sep, ...)
	local result = {}
	for i = 1, select('#', ...) do
		table.insert(result, tostring(select(i, ...)))
	end
	return table.concat(result, sep)
end

function GD.print(...)
	local message = String(join_str('\t', ...))
	api.godot_print(message)
end
_G.print = GD.print

function GD.print_warning(...)
	local info = debug.getinfo(2, 'nSl')
	local message = join_str('\t', ...)
	api.godot_print_warning(message, info.name, info.short_src, info.currentline)
end

function GD.print_error(...)
	local info = debug.getinfo(2, 'nSl')
	local message = join_str('\t', ...)
	api.godot_print_error(message, info.name, info.short_src, info.currentline)
end

local ResourceLoader = api.godot_global_get_singleton("ResourceLoader")
function GD.load(path)
	return ResourceLoader:load(path)
end
