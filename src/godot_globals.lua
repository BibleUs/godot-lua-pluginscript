GD = {
    api = api,
    api_1_1 = api_1_1,
    -- godot_error
    OK = ffi.C.GODOT_OK, 
    FAILED = ffi.C.GODOT_FAILED, 
    ERR_UNAVAILABLE = ffi.C.GODOT_ERR_UNAVAILABLE, 
    ERR_UNCONFIGURED = ffi.C.GODOT_ERR_UNCONFIGURED, 
    ERR_UNAUTHORIZED = ffi.C.GODOT_ERR_UNAUTHORIZED, 
    ERR_PARAMETER_RANGE_ERROR = ffi.C.GODOT_ERR_PARAMETER_RANGE_ERROR, 
    ERR_OUT_OF_MEMORY = ffi.C.GODOT_ERR_OUT_OF_MEMORY, 
    ERR_FILE_NOT_FOUND = ffi.C.GODOT_ERR_FILE_NOT_FOUND,
    ERR_FILE_BAD_DRIVE = ffi.C.GODOT_ERR_FILE_BAD_DRIVE,
    ERR_FILE_BAD_PATH = ffi.C.GODOT_ERR_FILE_BAD_PATH,
    ERR_FILE_NO_PERMISSION = ffi.C.GODOT_ERR_FILE_NO_PERMISSION, 
    ERR_FILE_ALREADY_IN_USE = ffi.C.GODOT_ERR_FILE_ALREADY_IN_USE,
    ERR_FILE_CANT_OPEN = ffi.C.GODOT_ERR_FILE_CANT_OPEN,
    ERR_FILE_CANT_WRITE = ffi.C.GODOT_ERR_FILE_CANT_WRITE,
    ERR_FILE_CANT_READ = ffi.C.GODOT_ERR_FILE_CANT_READ,
    ERR_FILE_UNRECOGNIZED = ffi.C.GODOT_ERR_FILE_UNRECOGNIZED, 
    ERR_FILE_CORRUPT = ffi.C.GODOT_ERR_FILE_CORRUPT,
    ERR_FILE_MISSING_DEPENDENCIES = ffi.C.GODOT_ERR_FILE_MISSING_DEPENDENCIES,
    ERR_FILE_EOF = ffi.C.GODOT_ERR_FILE_EOF,
    ERR_CANT_OPEN = ffi.C.GODOT_ERR_CANT_OPEN, 
    ERR_CANT_CREATE = ffi.C.GODOT_ERR_CANT_CREATE, 
    ERR_QUERY_FAILED = ffi.C.GODOT_ERR_QUERY_FAILED,
    ERR_ALREADY_IN_USE = ffi.C.GODOT_ERR_ALREADY_IN_USE,
    ERR_LOCKED = ffi.C.GODOT_ERR_LOCKED, 
    ERR_TIMEOUT = ffi.C.GODOT_ERR_TIMEOUT,
    ERR_CANT_CONNECT = ffi.C.GODOT_ERR_CANT_CONNECT, 
    ERR_CANT_RESOLVE = ffi.C.GODOT_ERR_CANT_RESOLVE,
    ERR_CONNECTION_ERROR = ffi.C.GODOT_ERR_CONNECTION_ERROR,
    ERR_CANT_ACQUIRE_RESOURCE = ffi.C.GODOT_ERR_CANT_ACQUIRE_RESOURCE,
    ERR_CANT_FORK = ffi.C.GODOT_ERR_CANT_FORK,
    ERR_INVALID_DATA = ffi.C.GODOT_ERR_INVALID_DATA, 
    ERR_INVALID_PARAMETER = ffi.C.GODOT_ERR_INVALID_PARAMETER, 
    ERR_ALREADY_EXISTS = ffi.C.GODOT_ERR_ALREADY_EXISTS, 
    ERR_DOES_NOT_EXIST = ffi.C.GODOT_ERR_DOES_NOT_EXIST, 
    ERR_DATABASE_CANT_READ = ffi.C.GODOT_ERR_DATABASE_CANT_READ, 
    ERR_DATABASE_CANT_WRITE = ffi.C.GODOT_ERR_DATABASE_CANT_WRITE, 
    ERR_COMPILATION_FAILED = ffi.C.GODOT_ERR_COMPILATION_FAILED,
    ERR_METHOD_NOT_FOUND = ffi.C.GODOT_ERR_METHOD_NOT_FOUND,
    ERR_LINK_FAILED = ffi.C.GODOT_ERR_LINK_FAILED,
    ERR_SCRIPT_FAILED = ffi.C.GODOT_ERR_SCRIPT_FAILED,
    ERR_CYCLIC_LINK = ffi.C.GODOT_ERR_CYCLIC_LINK, 
    ERR_INVALID_DECLARATION = ffi.C.GODOT_ERR_INVALID_DECLARATION,
    ERR_DUPLICATE_SYMBOL = ffi.C.GODOT_ERR_DUPLICATE_SYMBOL,
    ERR_PARSE_ERROR = ffi.C.GODOT_ERR_PARSE_ERROR,
    ERR_BUSY = ffi.C.GODOT_ERR_BUSY,
    ERR_SKIP = ffi.C.GODOT_ERR_SKIP, 
    ERR_HELP = ffi.C.GODOT_ERR_HELP, 
    ERR_BUG = ffi.C.GODOT_ERR_BUG, 
    ERR_PRINTER_ON_FIRE = ffi.C.GODOT_ERR_PRINTER_ON_FIRE, 
    -- godot_variant_type
    TYPE_NIL = GODOT_VARIANT_TYPE_NIL,
    TYPE_BOOL = GODOT_VARIANT_TYPE_BOOL,
    TYPE_INT = GODOT_VARIANT_TYPE_INT,
    TYPE_REAL = GODOT_VARIANT_TYPE_REAL,
    TYPE_STRING = GODOT_VARIANT_TYPE_STRING,
    TYPE_VECTOR2 = GODOT_VARIANT_TYPE_VECTOR2, 
    TYPE_RECT2 = GODOT_VARIANT_TYPE_RECT2,
    TYPE_VECTOR3 = GODOT_VARIANT_TYPE_VECTOR3,
    TYPE_TRANSFORM2D = GODOT_VARIANT_TYPE_TRANSFORM2D,
    TYPE_PLANE = GODOT_VARIANT_TYPE_PLANE,
    TYPE_QUAT = GODOT_VARIANT_TYPE_QUAT, 
    TYPE_AABB = GODOT_VARIANT_TYPE_AABB,
    TYPE_BASIS = GODOT_VARIANT_TYPE_BASIS,
    TYPE_TRANSFORM = GODOT_VARIANT_TYPE_TRANSFORM,
    TYPE_COLOR = GODOT_VARIANT_TYPE_COLOR,
    TYPE_NODE_PATH = GODOT_VARIANT_TYPE_NODE_PATH, 
    TYPE_RID = GODOT_VARIANT_TYPE_RID,
    TYPE_OBJECT = GODOT_VARIANT_TYPE_OBJECT,
    TYPE_DICTIONARY = GODOT_VARIANT_TYPE_DICTIONARY,
    TYPE_ARRAY = GODOT_VARIANT_TYPE_ARRAY, 
    TYPE_POOL_BYTE_ARRAY = GODOT_VARIANT_TYPE_POOL_BYTE_ARRAY,
    TYPE_POOL_INT_ARRAY = GODOT_VARIANT_TYPE_POOL_INT_ARRAY,
    TYPE_POOL_REAL_ARRAY = GODOT_VARIANT_TYPE_POOL_REAL_ARRAY,
    TYPE_POOL_STRING_ARRAY = GODOT_VARIANT_TYPE_POOL_STRING_ARRAY,
    TYPE_POOL_VECTOR2_ARRAY = GODOT_VARIANT_TYPE_POOL_VECTOR2_ARRAY, 
    TYPE_POOL_VECTOR3_ARRAY = GODOT_VARIANT_TYPE_POOL_VECTOR3_ARRAY,
    TYPE_POOL_COLOR_ARRAY = GODOT_VARIANT_TYPE_POOL_COLOR_ARRAY,
    -- godot_variant_call_error_error
	CALL_OK = GODOT_CALL_ERROR_CALL_OK,
	CALL_ERROR_INVALID_METHOD = GODOT_CALL_ERROR_CALL_ERROR_INVALID_METHOD,
	CALL_ERROR_INVALID_ARGUMENT = GODOT_CALL_ERROR_CALL_ERROR_INVALID_ARGUMENT,
	CALL_ERROR_TOO_MANY_ARGUMENTS = GODOT_CALL_ERROR_CALL_ERROR_TOO_MANY_ARGUMENTS,
	CALL_ERROR_TOO_FEW_ARGUMENTS = GODOT_CALL_ERROR_CALL_ERROR_TOO_FEW_ARGUMENTS,
	CALL_ERROR_INSTANCE_IS_NULL = GODOT_CALL_ERROR_CALL_ERROR_INSTANCE_IS_NULL,
}

function GD.print(...)
    local message = table.concat({ ... }, '\t')
    api.godot_print(String(message))
end

function GD.print_warning(...)
    local info = debug.getinfo(2, 'nSl')
    local message = table.concat({ ... }, '\t')
    api.godot_print_warning(message, info.name, info.short_src, info.currentline)
end

function GD.print_error(...)
    local info = debug.getinfo(2, 'nSl')
    local message = table.concat({ ... }, '\t')
    api.godot_print_error(message, info.name, info.short_src, info.currentline)
end

function GD.str(value)
    return api.godot_variant_as_string(Variant(value))
end

function GD.tostring(value)
    return tostring(Variant(value))
end
