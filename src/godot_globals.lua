local function concat_gdvalues(a, b)
	return api.godot_string_operator_plus(GD.str(a), GD.str(b))
end

GD = {
	api = api,
	api_1_1 = api_1_1,
	-- godot_error
	OK = ffi.C.GODOT_OK, 
	FAILED = ffi.C.GODOT_FAILED, 
	ERR_UNAVAILABLE = ffi.C.GODOT_ERR_UNAVAILABLE, 
	ERR_UNCONFIGURED = ffi.C.GODOT_ERR_UNCONFIGURED, 
	ERR_UNAUTHORIZED = ffi.C.GODOT_ERR_UNAUTHORIZED, 
	ERR_PARAMETER_RANGE_ERROR = ffi.C.GODOT_ERR_PARAMETER_RANGE_ERROR, 
	ERR_OUT_OF_MEMORY = ffi.C.GODOT_ERR_OUT_OF_MEMORY, 
	ERR_FILE_NOT_FOUND = ffi.C.GODOT_ERR_FILE_NOT_FOUND,
	ERR_FILE_BAD_DRIVE = ffi.C.GODOT_ERR_FILE_BAD_DRIVE,
	ERR_FILE_BAD_PATH = ffi.C.GODOT_ERR_FILE_BAD_PATH,
	ERR_FILE_NO_PERMISSION = ffi.C.GODOT_ERR_FILE_NO_PERMISSION, 
	ERR_FILE_ALREADY_IN_USE = ffi.C.GODOT_ERR_FILE_ALREADY_IN_USE,
	ERR_FILE_CANT_OPEN = ffi.C.GODOT_ERR_FILE_CANT_OPEN,
	ERR_FILE_CANT_WRITE = ffi.C.GODOT_ERR_FILE_CANT_WRITE,
	ERR_FILE_CANT_READ = ffi.C.GODOT_ERR_FILE_CANT_READ,
	ERR_FILE_UNRECOGNIZED = ffi.C.GODOT_ERR_FILE_UNRECOGNIZED, 
	ERR_FILE_CORRUPT = ffi.C.GODOT_ERR_FILE_CORRUPT,
	ERR_FILE_MISSING_DEPENDENCIES = ffi.C.GODOT_ERR_FILE_MISSING_DEPENDENCIES,
	ERR_FILE_EOF = ffi.C.GODOT_ERR_FILE_EOF,
	ERR_CANT_OPEN = ffi.C.GODOT_ERR_CANT_OPEN, 
	ERR_CANT_CREATE = ffi.C.GODOT_ERR_CANT_CREATE, 
	ERR_QUERY_FAILED = ffi.C.GODOT_ERR_QUERY_FAILED,
	ERR_ALREADY_IN_USE = ffi.C.GODOT_ERR_ALREADY_IN_USE,
	ERR_LOCKED = ffi.C.GODOT_ERR_LOCKED, 
	ERR_TIMEOUT = ffi.C.GODOT_ERR_TIMEOUT,
	ERR_CANT_CONNECT = ffi.C.GODOT_ERR_CANT_CONNECT, 
	ERR_CANT_RESOLVE = ffi.C.GODOT_ERR_CANT_RESOLVE,
	ERR_CONNECTION_ERROR = ffi.C.GODOT_ERR_CONNECTION_ERROR,
	ERR_CANT_ACQUIRE_RESOURCE = ffi.C.GODOT_ERR_CANT_ACQUIRE_RESOURCE,
	ERR_CANT_FORK = ffi.C.GODOT_ERR_CANT_FORK,
	ERR_INVALID_DATA = ffi.C.GODOT_ERR_INVALID_DATA, 
	ERR_INVALID_PARAMETER = ffi.C.GODOT_ERR_INVALID_PARAMETER, 
	ERR_ALREADY_EXISTS = ffi.C.GODOT_ERR_ALREADY_EXISTS, 
	ERR_DOES_NOT_EXIST = ffi.C.GODOT_ERR_DOES_NOT_EXIST, 
	ERR_DATABASE_CANT_READ = ffi.C.GODOT_ERR_DATABASE_CANT_READ, 
	ERR_DATABASE_CANT_WRITE = ffi.C.GODOT_ERR_DATABASE_CANT_WRITE, 
	ERR_COMPILATION_FAILED = ffi.C.GODOT_ERR_COMPILATION_FAILED,
	ERR_METHOD_NOT_FOUND = ffi.C.GODOT_ERR_METHOD_NOT_FOUND,
	ERR_LINK_FAILED = ffi.C.GODOT_ERR_LINK_FAILED,
	ERR_SCRIPT_FAILED = ffi.C.GODOT_ERR_SCRIPT_FAILED,
	ERR_CYCLIC_LINK = ffi.C.GODOT_ERR_CYCLIC_LINK, 
	ERR_INVALID_DECLARATION = ffi.C.GODOT_ERR_INVALID_DECLARATION,
	ERR_DUPLICATE_SYMBOL = ffi.C.GODOT_ERR_DUPLICATE_SYMBOL,
	ERR_PARSE_ERROR = ffi.C.GODOT_ERR_PARSE_ERROR,
	ERR_BUSY = ffi.C.GODOT_ERR_BUSY,
	ERR_SKIP = ffi.C.GODOT_ERR_SKIP, 
	ERR_HELP = ffi.C.GODOT_ERR_HELP, 
	ERR_BUG = ffi.C.GODOT_ERR_BUG, 
	ERR_PRINTER_ON_FIRE = ffi.C.GODOT_ERR_PRINTER_ON_FIRE, 
	-- godot_variant_type
	TYPE_NIL = ffi.C.GODOT_VARIANT_TYPE_NIL,
	TYPE_BOOL = ffi.C.GODOT_VARIANT_TYPE_BOOL,
	TYPE_INT = ffi.C.GODOT_VARIANT_TYPE_INT,
	TYPE_REAL = ffi.C.GODOT_VARIANT_TYPE_REAL,
	TYPE_STRING = ffi.C.GODOT_VARIANT_TYPE_STRING,
	TYPE_VECTOR2 = ffi.C.GODOT_VARIANT_TYPE_VECTOR2, 
	TYPE_RECT2 = ffi.C.GODOT_VARIANT_TYPE_RECT2,
	TYPE_VECTOR3 = ffi.C.GODOT_VARIANT_TYPE_VECTOR3,
	TYPE_TRANSFORM2D = ffi.C.GODOT_VARIANT_TYPE_TRANSFORM2D,
	TYPE_PLANE = ffi.C.GODOT_VARIANT_TYPE_PLANE,
	TYPE_QUAT = ffi.C.GODOT_VARIANT_TYPE_QUAT, 
	TYPE_AABB = ffi.C.GODOT_VARIANT_TYPE_AABB,
	TYPE_BASIS = ffi.C.GODOT_VARIANT_TYPE_BASIS,
	TYPE_TRANSFORM = ffi.C.GODOT_VARIANT_TYPE_TRANSFORM,
	TYPE_COLOR = ffi.C.GODOT_VARIANT_TYPE_COLOR,
	TYPE_NODE_PATH = ffi.C.GODOT_VARIANT_TYPE_NODE_PATH, 
	TYPE_RID = ffi.C.GODOT_VARIANT_TYPE_RID,
	TYPE_OBJECT = ffi.C.GODOT_VARIANT_TYPE_OBJECT,
	TYPE_DICTIONARY = ffi.C.GODOT_VARIANT_TYPE_DICTIONARY,
	TYPE_ARRAY = ffi.C.GODOT_VARIANT_TYPE_ARRAY, 
	TYPE_POOL_BYTE_ARRAY = ffi.C.GODOT_VARIANT_TYPE_POOL_BYTE_ARRAY,
	TYPE_POOL_INT_ARRAY = ffi.C.GODOT_VARIANT_TYPE_POOL_INT_ARRAY,
	TYPE_POOL_REAL_ARRAY = ffi.C.GODOT_VARIANT_TYPE_POOL_REAL_ARRAY,
	TYPE_POOL_STRING_ARRAY = ffi.C.GODOT_VARIANT_TYPE_POOL_STRING_ARRAY,
	TYPE_POOL_VECTOR2_ARRAY = ffi.C.GODOT_VARIANT_TYPE_POOL_VECTOR2_ARRAY, 
	TYPE_POOL_VECTOR3_ARRAY = ffi.C.GODOT_VARIANT_TYPE_POOL_VECTOR3_ARRAY,
	TYPE_POOL_COLOR_ARRAY = ffi.C.GODOT_VARIANT_TYPE_POOL_COLOR_ARRAY,
	-- godot_variant_call_error_error
	CALL_OK = ffi.C.GODOT_CALL_ERROR_CALL_OK,
	CALL_ERROR_INVALID_METHOD = ffi.C.GODOT_CALL_ERROR_CALL_ERROR_INVALID_METHOD,
	CALL_ERROR_INVALID_ARGUMENT = ffi.C.GODOT_CALL_ERROR_CALL_ERROR_INVALID_ARGUMENT,
	CALL_ERROR_TOO_MANY_ARGUMENTS = ffi.C.GODOT_CALL_ERROR_CALL_ERROR_TOO_MANY_ARGUMENTS,
	CALL_ERROR_TOO_FEW_ARGUMENTS = ffi.C.GODOT_CALL_ERROR_CALL_ERROR_TOO_FEW_ARGUMENTS,
	CALL_ERROR_INSTANCE_IS_NULL = ffi.C.GODOT_CALL_ERROR_CALL_ERROR_INSTANCE_IS_NULL,
	-- godot_method_rpc_mode
	RPC_MODE_DISABLED = ffi.C.GODOT_METHOD_RPC_MODE_DISABLED,
	RPC_MODE_REMOTE = ffi.C.GODOT_METHOD_RPC_MODE_REMOTE,
	RPC_MODE_MASTER = ffi.C.GODOT_METHOD_RPC_MODE_MASTER,
	RPC_MODE_PUPPET = ffi.C.GODOT_METHOD_RPC_MODE_PUPPET,
	RPC_MODE_SLAVE = ffi.C.GODOT_METHOD_RPC_MODE_SLAVE,
	RPC_MODE_REMOTESYNC = ffi.C.GODOT_METHOD_RPC_MODE_REMOTESYNC,
	RPC_MODE_SYNC = ffi.C.GODOT_METHOD_RPC_MODE_SYNC,
	RPC_MODE_MASTERSYNC = ffi.C.GODOT_METHOD_RPC_MODE_MASTERSYNC,
	RPC_MODE_PUPPETSYNC = ffi.C.GODOT_METHOD_RPC_MODE_PUPPETSYNC,
	-- godot_property_hint
	PROPERTY_HINT_NONE = ffi.C.GODOT_PROPERTY_HINT_NONE, 
	PROPERTY_HINT_RANGE = ffi.C.GODOT_PROPERTY_HINT_RANGE, 
	PROPERTY_HINT_EXP_RANGE = ffi.C.GODOT_PROPERTY_HINT_EXP_RANGE, 
	PROPERTY_HINT_ENUM = ffi.C.GODOT_PROPERTY_HINT_ENUM, 
	PROPERTY_HINT_EXP_EASING = ffi.C.GODOT_PROPERTY_HINT_EXP_EASING, 
	PROPERTY_HINT_LENGTH = ffi.C.GODOT_PROPERTY_HINT_LENGTH, 
	PROPERTY_HINT_SPRITE_FRAME = ffi.C.GODOT_PROPERTY_HINT_SPRITE_FRAME, 
	PROPERTY_HINT_KEY_ACCEL = ffi.C.GODOT_PROPERTY_HINT_KEY_ACCEL, 
	PROPERTY_HINT_FLAGS = ffi.C.GODOT_PROPERTY_HINT_FLAGS, 
	PROPERTY_HINT_LAYERS_2D_RENDER = ffi.C.GODOT_PROPERTY_HINT_LAYERS_2D_RENDER,
	PROPERTY_HINT_LAYERS_2D_PHYSICS = ffi.C.GODOT_PROPERTY_HINT_LAYERS_2D_PHYSICS,
	PROPERTY_HINT_LAYERS_3D_RENDER = ffi.C.GODOT_PROPERTY_HINT_LAYERS_3D_RENDER,
	PROPERTY_HINT_LAYERS_3D_PHYSICS = ffi.C.GODOT_PROPERTY_HINT_LAYERS_3D_PHYSICS,
	PROPERTY_HINT_FILE = ffi.C.GODOT_PROPERTY_HINT_FILE, 
	PROPERTY_HINT_DIR = ffi.C.GODOT_PROPERTY_HINT_DIR, 
	PROPERTY_HINT_GLOBAL_FILE = ffi.C.GODOT_PROPERTY_HINT_GLOBAL_FILE, 
	PROPERTY_HINT_GLOBAL_DIR = ffi.C.GODOT_PROPERTY_HINT_GLOBAL_DIR, 
	PROPERTY_HINT_RESOURCE_TYPE = ffi.C.GODOT_PROPERTY_HINT_RESOURCE_TYPE, 
	PROPERTY_HINT_MULTILINE_TEXT = ffi.C.GODOT_PROPERTY_HINT_MULTILINE_TEXT, 
	PROPERTY_HINT_PLACEHOLDER_TEXT = ffi.C.GODOT_PROPERTY_HINT_PLACEHOLDER_TEXT, 
	PROPERTY_HINT_COLOR_NO_ALPHA = ffi.C.GODOT_PROPERTY_HINT_COLOR_NO_ALPHA, 
	PROPERTY_HINT_IMAGE_COMPRESS_LOSSY = ffi.C.GODOT_PROPERTY_HINT_IMAGE_COMPRESS_LOSSY,
	PROPERTY_HINT_IMAGE_COMPRESS_LOSSLESS = ffi.C.GODOT_PROPERTY_HINT_IMAGE_COMPRESS_LOSSLESS,
	PROPERTY_HINT_OBJECT_ID = ffi.C.GODOT_PROPERTY_HINT_OBJECT_ID,
	PROPERTY_HINT_TYPE_STRING = ffi.C.GODOT_PROPERTY_HINT_TYPE_STRING, 
	PROPERTY_HINT_NODE_PATH_TO_EDITED_NODE = ffi.C.GODOT_PROPERTY_HINT_NODE_PATH_TO_EDITED_NODE, 
	PROPERTY_HINT_METHOD_OF_VARIANT_TYPE = ffi.C.GODOT_PROPERTY_HINT_METHOD_OF_VARIANT_TYPE, 
	PROPERTY_HINT_METHOD_OF_BASE_TYPE = ffi.C.GODOT_PROPERTY_HINT_METHOD_OF_BASE_TYPE, 
	PROPERTY_HINT_METHOD_OF_INSTANCE = ffi.C.GODOT_PROPERTY_HINT_METHOD_OF_INSTANCE, 
	PROPERTY_HINT_METHOD_OF_SCRIPT = ffi.C.GODOT_PROPERTY_HINT_METHOD_OF_SCRIPT, 
	PROPERTY_HINT_PROPERTY_OF_VARIANT_TYPE = ffi.C.GODOT_PROPERTY_HINT_PROPERTY_OF_VARIANT_TYPE, 
	PROPERTY_HINT_PROPERTY_OF_BASE_TYPE = ffi.C.GODOT_PROPERTY_HINT_PROPERTY_OF_BASE_TYPE, 
	PROPERTY_HINT_PROPERTY_OF_INSTANCE = ffi.C.GODOT_PROPERTY_HINT_PROPERTY_OF_INSTANCE, 
	PROPERTY_HINT_PROPERTY_OF_SCRIPT = ffi.C.GODOT_PROPERTY_HINT_PROPERTY_OF_SCRIPT, 
	-- godot_property_usage_flags
	PROPERTY_USAGE_STORAGE = ffi.C.GODOT_PROPERTY_USAGE_STORAGE,
	PROPERTY_USAGE_EDITOR = ffi.C.GODOT_PROPERTY_USAGE_EDITOR,
	PROPERTY_USAGE_NETWORK = ffi.C.GODOT_PROPERTY_USAGE_NETWORK,
	PROPERTY_USAGE_EDITOR_HELPER = ffi.C.GODOT_PROPERTY_USAGE_EDITOR_HELPER,
	PROPERTY_USAGE_CHECKABLE = ffi.C.GODOT_PROPERTY_USAGE_CHECKABLE, 
	PROPERTY_USAGE_CHECKED = ffi.C.GODOT_PROPERTY_USAGE_CHECKED, 
	PROPERTY_USAGE_INTERNATIONALIZED = ffi.C.GODOT_PROPERTY_USAGE_INTERNATIONALIZED, 
	PROPERTY_USAGE_GROUP = ffi.C.GODOT_PROPERTY_USAGE_GROUP, 
	PROPERTY_USAGE_CATEGORY = ffi.C.GODOT_PROPERTY_USAGE_CATEGORY,
	PROPERTY_USAGE_STORE_IF_NONZERO = ffi.C.GODOT_PROPERTY_USAGE_STORE_IF_NONZERO, 
	PROPERTY_USAGE_STORE_IF_NONONE = ffi.C.GODOT_PROPERTY_USAGE_STORE_IF_NONONE, 
	PROPERTY_USAGE_NO_INSTANCE_STATE = ffi.C.GODOT_PROPERTY_USAGE_NO_INSTANCE_STATE,
	PROPERTY_USAGE_RESTART_IF_CHANGED = ffi.C.GODOT_PROPERTY_USAGE_RESTART_IF_CHANGED,
	PROPERTY_USAGE_SCRIPT_VARIABLE = ffi.C.GODOT_PROPERTY_USAGE_SCRIPT_VARIABLE,
	PROPERTY_USAGE_STORE_IF_NULL = ffi.C.GODOT_PROPERTY_USAGE_STORE_IF_NULL,
	PROPERTY_USAGE_ANIMATE_AS_TRIGGER = ffi.C.GODOT_PROPERTY_USAGE_ANIMATE_AS_TRIGGER,
	PROPERTY_USAGE_UPDATE_ALL_IF_MODIFIED = ffi.C.GODOT_PROPERTY_USAGE_UPDATE_ALL_IF_MODIFIED,
	PROPERTY_USAGE_DEFAULT = ffi.C.GODOT_PROPERTY_USAGE_DEFAULT,
	PROPERTY_USAGE_DEFAULT_INTL = ffi.C.GODOT_PROPERTY_USAGE_DEFAULT_INTL,
	PROPERTY_USAGE_NOEDITOR = ffi.C.GODOT_PROPERTY_USAGE_NOEDITOR,
}

bool = ffi.typeof('godot_bool')
int = ffi.typeof('godot_int')
float = ffi.typeof('godot_real')

function GD.str(value)
	return api.godot_variant_as_string(Variant(value))
end

function GD.tostring(value)
	return tostring(Variant(value))
end

function GD.print(...)
	local message = PoolStringArray(...):join('\t')
	api.godot_print(message)
end
_G.print = GD.print

function GD.print_warning(...)
	local info = debug.getinfo(2, 'nSl')
	local message = tostring(PoolStringArray(...):join('\t'))
	api.godot_print_warning(message, info.name, info.short_src, info.currentline)
end

function GD.print_error(...)
	local info = debug.getinfo(2, 'nSl')
	local message = tostring(PoolStringArray(...):join('\t'))
	api.godot_print_error(message, info.name, info.short_src, info.currentline)
end

